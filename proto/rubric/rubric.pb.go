// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/rubric/rubric.proto

package rubric

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNewBlockingCriteriaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	FinalMark     int64                  `protobuf:"varint,5,opt,name=final_mark,json=finalMark,proto3" json:"final_mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewBlockingCriteriaRequest) Reset() {
	*x = CreateNewBlockingCriteriaRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewBlockingCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewBlockingCriteriaRequest) ProtoMessage() {}

func (x *CreateNewBlockingCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewBlockingCriteriaRequest.ProtoReflect.Descriptor instead.
func (*CreateNewBlockingCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNewBlockingCriteriaRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *CreateNewBlockingCriteriaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNewBlockingCriteriaRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateNewBlockingCriteriaRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateNewBlockingCriteriaRequest) GetFinalMark() int64 {
	if x != nil {
		return x.FinalMark
	}
	return 0
}

type CreateNewBlockingCriteriaResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CriteriaGroupId int32                  `protobuf:"varint,1,opt,name=criteria_group_id,json=criteriaGroupId,proto3" json:"criteria_group_id,omitempty"`
	Error           string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateNewBlockingCriteriaResponse) Reset() {
	*x = CreateNewBlockingCriteriaResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewBlockingCriteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewBlockingCriteriaResponse) ProtoMessage() {}

func (x *CreateNewBlockingCriteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewBlockingCriteriaResponse.ProtoReflect.Descriptor instead.
func (*CreateNewBlockingCriteriaResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNewBlockingCriteriaResponse) GetCriteriaGroupId() int32 {
	if x != nil {
		return x.CriteriaGroupId
	}
	return 0
}

func (x *CreateNewBlockingCriteriaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateNewCriteriaGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewCriteriaGroupRequest) Reset() {
	*x = CreateNewCriteriaGroupRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewCriteriaGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewCriteriaGroupRequest) ProtoMessage() {}

func (x *CreateNewCriteriaGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewCriteriaGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateNewCriteriaGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNewCriteriaGroupRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *CreateNewCriteriaGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type CreateNewCriteriaGroupResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CriteriaGroupId int32                  `protobuf:"varint,1,opt,name=criteria_group_id,json=criteriaGroupId,proto3" json:"criteria_group_id,omitempty"`
	Error           string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateNewCriteriaGroupResponse) Reset() {
	*x = CreateNewCriteriaGroupResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewCriteriaGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewCriteriaGroupResponse) ProtoMessage() {}

func (x *CreateNewCriteriaGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewCriteriaGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateNewCriteriaGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNewCriteriaGroupResponse) GetCriteriaGroupId() int32 {
	if x != nil {
		return x.CriteriaGroupId
	}
	return 0
}

func (x *CreateNewCriteriaGroupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateNewMainCriteriaRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CriteriaGroupId int32                  `protobuf:"varint,1,opt,name=criteria_group_id,json=criteriaGroupId,proto3" json:"criteria_group_id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateNewMainCriteriaRequest) Reset() {
	*x = CreateNewMainCriteriaRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewMainCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMainCriteriaRequest) ProtoMessage() {}

func (x *CreateNewMainCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMainCriteriaRequest.ProtoReflect.Descriptor instead.
func (*CreateNewMainCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNewMainCriteriaRequest) GetCriteriaGroupId() int32 {
	if x != nil {
		return x.CriteriaGroupId
	}
	return 0
}

func (x *CreateNewMainCriteriaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateNewMainCriteriaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CriteriaId    int32                  `protobuf:"varint,1,opt,name=criteria_id,json=criteriaId,proto3" json:"criteria_id,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNewMainCriteriaResponse) Reset() {
	*x = CreateNewMainCriteriaResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNewMainCriteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewMainCriteriaResponse) ProtoMessage() {}

func (x *CreateNewMainCriteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewMainCriteriaResponse.ProtoReflect.Descriptor instead.
func (*CreateNewMainCriteriaResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{5}
}

func (x *CreateNewMainCriteriaResponse) GetCriteriaId() int32 {
	if x != nil {
		return x.CriteriaId
	}
	return 0
}

func (x *CreateNewMainCriteriaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateCriteriaDescriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CriteriaId    int32                  `protobuf:"varint,1,opt,name=criteria_id,json=criteriaId,proto3" json:"criteria_id,omitempty"`
	Mark          string                 `protobuf:"bytes,2,opt,name=mark,proto3" json:"mark,omitempty"` // "000", "025", "050", "075", "100"
	Comment       string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCriteriaDescriptionRequest) Reset() {
	*x = CreateCriteriaDescriptionRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCriteriaDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCriteriaDescriptionRequest) ProtoMessage() {}

func (x *CreateCriteriaDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCriteriaDescriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateCriteriaDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCriteriaDescriptionRequest) GetCriteriaId() int32 {
	if x != nil {
		return x.CriteriaId
	}
	return 0
}

func (x *CreateCriteriaDescriptionRequest) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *CreateCriteriaDescriptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CreateCriteriaDescriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCriteriaDescriptionResponse) Reset() {
	*x = CreateCriteriaDescriptionResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCriteriaDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCriteriaDescriptionResponse) ProtoMessage() {}

func (x *CreateCriteriaDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCriteriaDescriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateCriteriaDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCriteriaDescriptionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateCriteriaDescriptionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SetCriteriaWeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CriteriaId    int32                  `protobuf:"varint,1,opt,name=criteria_id,json=criteriaId,proto3" json:"criteria_id,omitempty"`
	Weight        int64                  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCriteriaWeightRequest) Reset() {
	*x = SetCriteriaWeightRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCriteriaWeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCriteriaWeightRequest) ProtoMessage() {}

func (x *SetCriteriaWeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCriteriaWeightRequest.ProtoReflect.Descriptor instead.
func (*SetCriteriaWeightRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{8}
}

func (x *SetCriteriaWeightRequest) GetCriteriaId() int32 {
	if x != nil {
		return x.CriteriaId
	}
	return 0
}

func (x *SetCriteriaWeightRequest) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type SetCriteriaWeightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCriteriaWeightResponse) Reset() {
	*x = SetCriteriaWeightResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCriteriaWeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCriteriaWeightResponse) ProtoMessage() {}

func (x *SetCriteriaWeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCriteriaWeightResponse.ProtoReflect.Descriptor instead.
func (*SetCriteriaWeightResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{9}
}

func (x *SetCriteriaWeightResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetCriteriaWeightResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LoadTaskBlockingCriteriasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadTaskBlockingCriteriasRequest) Reset() {
	*x = LoadTaskBlockingCriteriasRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTaskBlockingCriteriasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTaskBlockingCriteriasRequest) ProtoMessage() {}

func (x *LoadTaskBlockingCriteriasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTaskBlockingCriteriasRequest.ProtoReflect.Descriptor instead.
func (*LoadTaskBlockingCriteriasRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{10}
}

func (x *LoadTaskBlockingCriteriasRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type BlockingCriteria struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	FinalMark     int64                  `protobuf:"varint,5,opt,name=final_mark,json=finalMark,proto3" json:"final_mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockingCriteria) Reset() {
	*x = BlockingCriteria{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockingCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockingCriteria) ProtoMessage() {}

func (x *BlockingCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockingCriteria.ProtoReflect.Descriptor instead.
func (*BlockingCriteria) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{11}
}

func (x *BlockingCriteria) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlockingCriteria) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockingCriteria) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BlockingCriteria) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *BlockingCriteria) GetFinalMark() int64 {
	if x != nil {
		return x.FinalMark
	}
	return 0
}

type LoadTaskBlockingCriteriasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Criteria      []*BlockingCriteria    `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadTaskBlockingCriteriasResponse) Reset() {
	*x = LoadTaskBlockingCriteriasResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTaskBlockingCriteriasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTaskBlockingCriteriasResponse) ProtoMessage() {}

func (x *LoadTaskBlockingCriteriasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTaskBlockingCriteriasResponse.ProtoReflect.Descriptor instead.
func (*LoadTaskBlockingCriteriasResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{12}
}

func (x *LoadTaskBlockingCriteriasResponse) GetCriteria() []*BlockingCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *LoadTaskBlockingCriteriasResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LoadTaskMainCriteriasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadTaskMainCriteriasRequest) Reset() {
	*x = LoadTaskMainCriteriasRequest{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTaskMainCriteriasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTaskMainCriteriasRequest) ProtoMessage() {}

func (x *LoadTaskMainCriteriasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTaskMainCriteriasRequest.ProtoReflect.Descriptor instead.
func (*LoadTaskMainCriteriasRequest) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{13}
}

func (x *LoadTaskMainCriteriasRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type CriteriaGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Criteria      []*MainCriteria        `protobuf:"bytes,3,rep,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CriteriaGroup) Reset() {
	*x = CriteriaGroup{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CriteriaGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaGroup) ProtoMessage() {}

func (x *CriteriaGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaGroup.ProtoReflect.Descriptor instead.
func (*CriteriaGroup) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{14}
}

func (x *CriteriaGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CriteriaGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CriteriaGroup) GetCriteria() []*MainCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type MainCriteria struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Weight        int64                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Comment_000   string                 `protobuf:"bytes,4,opt,name=comment_000,json=comment000,proto3" json:"comment_000,omitempty"`
	Comment_025   string                 `protobuf:"bytes,5,opt,name=comment_025,json=comment025,proto3" json:"comment_025,omitempty"`
	Comment_050   string                 `protobuf:"bytes,6,opt,name=comment_050,json=comment050,proto3" json:"comment_050,omitempty"`
	Comment_075   string                 `protobuf:"bytes,7,opt,name=comment_075,json=comment075,proto3" json:"comment_075,omitempty"`
	Comment_100   string                 `protobuf:"bytes,8,opt,name=comment_100,json=comment100,proto3" json:"comment_100,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MainCriteria) Reset() {
	*x = MainCriteria{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MainCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainCriteria) ProtoMessage() {}

func (x *MainCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainCriteria.ProtoReflect.Descriptor instead.
func (*MainCriteria) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{15}
}

func (x *MainCriteria) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MainCriteria) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MainCriteria) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *MainCriteria) GetComment_000() string {
	if x != nil {
		return x.Comment_000
	}
	return ""
}

func (x *MainCriteria) GetComment_025() string {
	if x != nil {
		return x.Comment_025
	}
	return ""
}

func (x *MainCriteria) GetComment_050() string {
	if x != nil {
		return x.Comment_050
	}
	return ""
}

func (x *MainCriteria) GetComment_075() string {
	if x != nil {
		return x.Comment_075
	}
	return ""
}

func (x *MainCriteria) GetComment_100() string {
	if x != nil {
		return x.Comment_100
	}
	return ""
}

type LoadTaskMainCriteriasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*CriteriaGroup       `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadTaskMainCriteriasResponse) Reset() {
	*x = LoadTaskMainCriteriasResponse{}
	mi := &file_proto_rubric_rubric_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadTaskMainCriteriasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTaskMainCriteriasResponse) ProtoMessage() {}

func (x *LoadTaskMainCriteriasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rubric_rubric_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTaskMainCriteriasResponse.ProtoReflect.Descriptor instead.
func (*LoadTaskMainCriteriasResponse) Descriptor() ([]byte, []int) {
	return file_proto_rubric_rubric_proto_rawDescGZIP(), []int{16}
}

func (x *LoadTaskMainCriteriasResponse) GetGroups() []*CriteriaGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *LoadTaskMainCriteriasResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_rubric_rubric_proto protoreflect.FileDescriptor

const file_proto_rubric_rubric_proto_rawDesc = "" +
	"\n" +
	"\x19proto/rubric/rubric.proto\x12\x06rubric\"\xaa\x01\n" +
	" CreateNewBlockingCriteriaRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x12\x1d\n" +
	"\n" +
	"final_mark\x18\x05 \x01(\x03R\tfinalMark\"e\n" +
	"!CreateNewBlockingCriteriaResponse\x12*\n" +
	"\x11criteria_group_id\x18\x01 \x01(\x05R\x0fcriteriaGroupId\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"W\n" +
	"\x1dCreateNewCriteriaGroupRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\"b\n" +
	"\x1eCreateNewCriteriaGroupResponse\x12*\n" +
	"\x11criteria_group_id\x18\x01 \x01(\x05R\x0fcriteriaGroupId\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"^\n" +
	"\x1cCreateNewMainCriteriaRequest\x12*\n" +
	"\x11criteria_group_id\x18\x01 \x01(\x05R\x0fcriteriaGroupId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"V\n" +
	"\x1dCreateNewMainCriteriaResponse\x12\x1f\n" +
	"\vcriteria_id\x18\x01 \x01(\x05R\n" +
	"criteriaId\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"q\n" +
	" CreateCriteriaDescriptionRequest\x12\x1f\n" +
	"\vcriteria_id\x18\x01 \x01(\x05R\n" +
	"criteriaId\x12\x12\n" +
	"\x04mark\x18\x02 \x01(\tR\x04mark\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"S\n" +
	"!CreateCriteriaDescriptionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"S\n" +
	"\x18SetCriteriaWeightRequest\x12\x1f\n" +
	"\vcriteria_id\x18\x01 \x01(\x05R\n" +
	"criteriaId\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\x03R\x06weight\"K\n" +
	"\x19SetCriteriaWeightResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\";\n" +
	" LoadTaskBlockingCriteriasRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\"\x91\x01\n" +
	"\x10BlockingCriteria\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\x12\x1d\n" +
	"\n" +
	"final_mark\x18\x05 \x01(\x03R\tfinalMark\"o\n" +
	"!LoadTaskBlockingCriteriasResponse\x124\n" +
	"\bcriteria\x18\x01 \x03(\v2\x18.rubric.BlockingCriteriaR\bcriteria\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"7\n" +
	"\x1cLoadTaskMainCriteriasRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\"p\n" +
	"\rCriteriaGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\x120\n" +
	"\bcriteria\x18\x03 \x03(\v2\x14.rubric.MainCriteriaR\bcriteria\"\xef\x01\n" +
	"\fMainCriteria\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06weight\x18\x03 \x01(\x03R\x06weight\x12\x1f\n" +
	"\vcomment_000\x18\x04 \x01(\tR\n" +
	"comment000\x12\x1f\n" +
	"\vcomment_025\x18\x05 \x01(\tR\n" +
	"comment025\x12\x1f\n" +
	"\vcomment_050\x18\x06 \x01(\tR\n" +
	"comment050\x12\x1f\n" +
	"\vcomment_075\x18\a \x01(\tR\n" +
	"comment075\x12\x1f\n" +
	"\vcomment_100\x18\b \x01(\tR\n" +
	"comment100\"d\n" +
	"\x1dLoadTaskMainCriteriasResponse\x12-\n" +
	"\x06groups\x18\x01 \x03(\v2\x15.rubric.CriteriaGroupR\x06groups\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2\x82\x06\n" +
	"\rRubricService\x12r\n" +
	"\x19CreateNewBlockingCriteria\x12(.rubric.CreateNewBlockingCriteriaRequest\x1a).rubric.CreateNewBlockingCriteriaResponse\"\x00\x12i\n" +
	"\x16CreateNewCriteriaGroup\x12%.rubric.CreateNewCriteriaGroupRequest\x1a&.rubric.CreateNewCriteriaGroupResponse\"\x00\x12f\n" +
	"\x15CreateNewMainCriteria\x12$.rubric.CreateNewMainCriteriaRequest\x1a%.rubric.CreateNewMainCriteriaResponse\"\x00\x12r\n" +
	"\x19CreateCriteriaDescription\x12(.rubric.CreateCriteriaDescriptionRequest\x1a).rubric.CreateCriteriaDescriptionResponse\"\x00\x12Z\n" +
	"\x11SetCriteriaWeight\x12 .rubric.SetCriteriaWeightRequest\x1a!.rubric.SetCriteriaWeightResponse\"\x00\x12r\n" +
	"\x19LoadTaskBlockingCriterias\x12(.rubric.LoadTaskBlockingCriteriasRequest\x1a).rubric.LoadTaskBlockingCriteriasResponse\"\x00\x12f\n" +
	"\x15LoadTaskMainCriterias\x12$.rubric.LoadTaskMainCriteriasRequest\x1a%.rubric.LoadTaskMainCriteriasResponse\"\x00B\x17Z\x15./proto/rubric;rubricb\x06proto3"

var (
	file_proto_rubric_rubric_proto_rawDescOnce sync.Once
	file_proto_rubric_rubric_proto_rawDescData []byte
)

func file_proto_rubric_rubric_proto_rawDescGZIP() []byte {
	file_proto_rubric_rubric_proto_rawDescOnce.Do(func() {
		file_proto_rubric_rubric_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_rubric_rubric_proto_rawDesc), len(file_proto_rubric_rubric_proto_rawDesc)))
	})
	return file_proto_rubric_rubric_proto_rawDescData
}

var file_proto_rubric_rubric_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_rubric_rubric_proto_goTypes = []any{
	(*CreateNewBlockingCriteriaRequest)(nil),  // 0: rubric.CreateNewBlockingCriteriaRequest
	(*CreateNewBlockingCriteriaResponse)(nil), // 1: rubric.CreateNewBlockingCriteriaResponse
	(*CreateNewCriteriaGroupRequest)(nil),     // 2: rubric.CreateNewCriteriaGroupRequest
	(*CreateNewCriteriaGroupResponse)(nil),    // 3: rubric.CreateNewCriteriaGroupResponse
	(*CreateNewMainCriteriaRequest)(nil),      // 4: rubric.CreateNewMainCriteriaRequest
	(*CreateNewMainCriteriaResponse)(nil),     // 5: rubric.CreateNewMainCriteriaResponse
	(*CreateCriteriaDescriptionRequest)(nil),  // 6: rubric.CreateCriteriaDescriptionRequest
	(*CreateCriteriaDescriptionResponse)(nil), // 7: rubric.CreateCriteriaDescriptionResponse
	(*SetCriteriaWeightRequest)(nil),          // 8: rubric.SetCriteriaWeightRequest
	(*SetCriteriaWeightResponse)(nil),         // 9: rubric.SetCriteriaWeightResponse
	(*LoadTaskBlockingCriteriasRequest)(nil),  // 10: rubric.LoadTaskBlockingCriteriasRequest
	(*BlockingCriteria)(nil),                  // 11: rubric.BlockingCriteria
	(*LoadTaskBlockingCriteriasResponse)(nil), // 12: rubric.LoadTaskBlockingCriteriasResponse
	(*LoadTaskMainCriteriasRequest)(nil),      // 13: rubric.LoadTaskMainCriteriasRequest
	(*CriteriaGroup)(nil),                     // 14: rubric.CriteriaGroup
	(*MainCriteria)(nil),                      // 15: rubric.MainCriteria
	(*LoadTaskMainCriteriasResponse)(nil),     // 16: rubric.LoadTaskMainCriteriasResponse
}
var file_proto_rubric_rubric_proto_depIdxs = []int32{
	11, // 0: rubric.LoadTaskBlockingCriteriasResponse.criteria:type_name -> rubric.BlockingCriteria
	15, // 1: rubric.CriteriaGroup.criteria:type_name -> rubric.MainCriteria
	14, // 2: rubric.LoadTaskMainCriteriasResponse.groups:type_name -> rubric.CriteriaGroup
	0,  // 3: rubric.RubricService.CreateNewBlockingCriteria:input_type -> rubric.CreateNewBlockingCriteriaRequest
	2,  // 4: rubric.RubricService.CreateNewCriteriaGroup:input_type -> rubric.CreateNewCriteriaGroupRequest
	4,  // 5: rubric.RubricService.CreateNewMainCriteria:input_type -> rubric.CreateNewMainCriteriaRequest
	6,  // 6: rubric.RubricService.CreateCriteriaDescription:input_type -> rubric.CreateCriteriaDescriptionRequest
	8,  // 7: rubric.RubricService.SetCriteriaWeight:input_type -> rubric.SetCriteriaWeightRequest
	10, // 8: rubric.RubricService.LoadTaskBlockingCriterias:input_type -> rubric.LoadTaskBlockingCriteriasRequest
	13, // 9: rubric.RubricService.LoadTaskMainCriterias:input_type -> rubric.LoadTaskMainCriteriasRequest
	1,  // 10: rubric.RubricService.CreateNewBlockingCriteria:output_type -> rubric.CreateNewBlockingCriteriaResponse
	3,  // 11: rubric.RubricService.CreateNewCriteriaGroup:output_type -> rubric.CreateNewCriteriaGroupResponse
	5,  // 12: rubric.RubricService.CreateNewMainCriteria:output_type -> rubric.CreateNewMainCriteriaResponse
	7,  // 13: rubric.RubricService.CreateCriteriaDescription:output_type -> rubric.CreateCriteriaDescriptionResponse
	9,  // 14: rubric.RubricService.SetCriteriaWeight:output_type -> rubric.SetCriteriaWeightResponse
	12, // 15: rubric.RubricService.LoadTaskBlockingCriterias:output_type -> rubric.LoadTaskBlockingCriteriasResponse
	16, // 16: rubric.RubricService.LoadTaskMainCriterias:output_type -> rubric.LoadTaskMainCriteriasResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_rubric_rubric_proto_init() }
func file_proto_rubric_rubric_proto_init() {
	if File_proto_rubric_rubric_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_rubric_rubric_proto_rawDesc), len(file_proto_rubric_rubric_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rubric_rubric_proto_goTypes,
		DependencyIndexes: file_proto_rubric_rubric_proto_depIdxs,
		MessageInfos:      file_proto_rubric_rubric_proto_msgTypes,
	}.Build()
	File_proto_rubric_rubric_proto = out.File
	file_proto_rubric_rubric_proto_goTypes = nil
	file_proto_rubric_rubric_proto_depIdxs = nil
}
