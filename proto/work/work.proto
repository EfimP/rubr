syntax = "proto3";
package work;

option go_package = "./proto/work;work";

service WorkService {
  rpc GetTasksForLector (GetTasksForLectorRequest) returns (GetTasksForLectorResponse) {}
  rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse) {}
  rpc SetTaskTitle (SetTaskTitleRequest) returns (SetTaskTitleResponse) {}
  rpc SetTaskDescription (SetTaskDescriptionRequest) returns (SetTaskDescriptionResponse) {}
  rpc SetTaskDeadline (SetTaskDeadlineRequest) returns (SetTaskDeadlineResponse) {}
  rpc CreateWork (CreateWorkRequest) returns (CreateWorkResponse) {}
  rpc LoadTaskName (LoadTaskNameRequest) returns (LoadTaskNameResponse) {}
  rpc LoadTaskDescription (LoadTaskDescriptionRequest) returns (LoadTaskDescriptionResponse) {}
  rpc LoadTaskDeadline (LoadTaskDeadlineRequest) returns (LoadTaskDeadlineResponse) {}
  rpc GetGroups(GetGroupsRequest) returns (GetGroupsResponse);
  rpc GetDisciplines(GetDisciplinesRequest) returns (GetDisciplinesResponse);
  rpc GetTaskDetails (GetTaskDetailsRequest) returns (GetTaskDetailsResponse) {}
  rpc UpdateTaskGroupAndDiscipline (UpdateTaskGroupAndDisciplineRequest) returns (UpdateTaskGroupAndDisciplineResponse) {}

  rpc GetStudentWorksForSeminarist (GetStudentWorksForSeminaristRequest) returns (GetStudentWorksForSeminaristResponse) {}
  rpc GetTasksForSeminarist (GetTasksForSeminaristRequest) returns (GetTasksForSeminaristResponse) {}
  rpc GetStudentWorksByTask (GetStudentWorksByTaskRequest) returns (GetStudentWorksByTaskResponse) {}
  rpc GetAssistantsByDiscipline (GetAssistantsByDisciplineRequest) returns (GetAssistantsByDisciplineResponse) {}
  rpc AssignAssistantsToWorks (AssignAssistantsToWorksRequest) returns (AssignAssistantsToWorksResponse) {}

  rpc UpdateWork(UpdateWorkRequest) returns (UpdateWorkResponse);
}

message UpdateWorkRequest {
  int32 work_id = 1;
  string status = 2;
}
message UpdateWorkResponse {
  string error = 1;
}

message GetStudentWorksByTaskRequest {
  int32 task_id = 1;
}

message GetStudentWorksByTaskResponse {
  message StudentWork {
    int32 id = 1;
    string student_name = 2;
    string student_surname = 3;
    string student_patronymic = 4;
    string student_email = 5;
    string status = 6;
    int32 assistant_id = 7;
    string assistant_name = 8; // Новое поле
    string assistant_surname = 9; // Новое поле
    string assistant_patronymic = 10; // Новое поле
  }
  repeated StudentWork works = 1;
  string error = 2;
}

message GetAssistantsByDisciplineRequest {
  int32 discipline_id = 1;
}

message GetAssistantsByDisciplineResponse {
  message Assistant {
    int32 id = 1;
    string name = 2;
    string surname = 3;
    string patronymic = 4;
  }
  repeated Assistant assistants = 1;
  string error = 2;
}

message AssignAssistantsToWorksRequest {
  message Assignment {
    int32 work_id = 1;
    int32 assistant_id = 2;
  }
  repeated Assignment assignments = 1;
}

message AssignAssistantsToWorksResponse {
  bool success = 1;
  string error = 2;
}

message GetTasksForSeminaristRequest {
  string seminarist_id = 1;
}

message GetTasksForSeminaristResponse {
  message Task {
    int32 id = 1;
    string title = 2;
    string deadline = 3;
  }
  repeated Task tasks = 1;
  string error = 2;
}

message GetStudentWorksForSeminaristRequest {
  string seminarist_id = 1;
}

message GetStudentWorksForSeminaristResponse {
  message StudentWork {
    int32 id = 1;
    string title = 2;
    string created_at = 3;
    string student_name = 4;
    int32 task_id = 5;
  }
  repeated StudentWork works = 1;
  string error = 2;
}



message GetTaskDetailsRequest {
  int32 task_id = 1;
}

message GetTaskDetailsResponse {
  string title = 1;
  string description = 2;
  string deadline = 3;
  string group_name = 4;
  string discipline_name = 5;
  string lector_name = 6;
  string lector_surname = 7;
  string lector_patronymic = 8;
  int32 discipline_id = 9;
  string error = 10;
}

message UpdateTaskGroupAndDisciplineRequest {
  int32 task_id = 1;
  int32 group_id = 2;
  int32 discipline_id = 3;
}

message UpdateTaskGroupAndDisciplineResponse {
  bool success = 1;
  string error = 2;
}

message GetTasksForLectorRequest {
  int32 lector_id = 1;
}

message Task {
  int32 id = 1;
  string title = 2;
  string deadline = 3;
}

message GetTasksForLectorResponse {
  repeated Task tasks = 1;
  string error = 2;
}

message DeleteTaskRequest {
  int32 task_id = 1;
}

message DeleteTaskResponse {
  bool success = 1;
  string error = 2;
}

message SetTaskTitleRequest {
  int32 task_id = 1;
  string title = 2;
}

message SetTaskTitleResponse {
  bool success = 1;
  string error = 2;
}

message SetTaskDescriptionRequest {
  int32 task_id = 1;
  string description = 2;
}

message SetTaskDescriptionResponse {
  bool success = 1;
  string error = 2;
}

message SetTaskDeadlineRequest {
  int32 task_id = 1;
  string deadline = 2;
}

message SetTaskDeadlineResponse {
  bool success = 1;
  string error = 2;
}

message CreateWorkRequest {
  int32 lector_id = 1;
  int32 group_id = 2;
  string title = 3;
  string description = 4;
  string deadline = 5;
  int32 discipline_id = 6;
  string content_url = 7;
}

message CreateWorkResponse {
  int32 task_id = 1;
  string error = 2;
}

message LoadTaskNameRequest {
  int32 task_id = 1;
}

message LoadTaskNameResponse {
  string title = 1;
  string error = 2;
}

message LoadTaskDescriptionRequest {
  int32 task_id = 1;
}

message LoadTaskDescriptionResponse {
  string description = 1;
  string error = 2;
}

message LoadTaskDeadlineRequest {
  int32 task_id = 1;
}

message LoadTaskDeadlineResponse {
  string deadline = 1;
  string error = 2;
}
message GetGroupsRequest {
  int32 lector_id = 1;
}

message GetGroupsResponse {
  message Group {
    int32 id = 1;
    string name = 2;
  }
  repeated Group groups = 1;
  string error = 2;
}

message GetDisciplinesRequest {
  int32 lector_id = 1;
}

message GetDisciplinesResponse {
  message Discipline {
    int32 id = 1;
    string name = 2;
  }
  repeated Discipline disciplines = 1;
  string error = 2;
}