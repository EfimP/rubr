// В файле superacc.proto

syntax = "proto3";
package superacc;

option go_package = "./proto/superacc;superacc";

service SuperAccService {
  rpc UpdateUserRole (UpdateRoleRequest) returns (UpdateRoleResponse) {}
  rpc ManageGroup (ManageGroupRequest) returns (ManageGroupResponse) {}
  rpc ManageDiscipline (ManageDisciplineRequest) returns (ManageDisciplineResponse) {}
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {}
  rpc ManageGroupEntity (ManageGroupEntityRequest) returns (ManageGroupEntityResponse) {}
  rpc ListAllUsers (ListAllUsersRequest) returns (ListAllUsersResponse) {}
  rpc ListUsersByGroup (ListUsersByGroupRequest) returns (ListUsersByGroupResponse) {}
  rpc RemoveUser (RemoveUserRequest) returns (RemoveUserResponse) {}
  rpc AddUser (AddUserRequest) returns (AddUserResponse) {}
  rpc ManageDisciplineEntity (ManageDisciplineEntityRequest) returns (ManageDisciplineEntityResponse) {}
  rpc ListDisciplines (ListDisciplinesRequest) returns (ListDisciplinesResponse) {}
  rpc CreateDiscipline (ManageDisciplineEntityRequest) returns (ManageDisciplineEntityResponse) {}
  rpc DeleteDiscipline (DeleteDisciplineRequest) returns (DeleteDisciplineResponse) {}
  rpc GetGroupStaff (GetGroupStaffRequest) returns (GetGroupStaffResponse) {}
  rpc DetachDisciplinesFromGroup (DetachDisciplinesFromGroupRequest) returns (DetachDisciplinesFromGroupResponse) {} // Новый метод
}

message UpdateRoleRequest {
  int32 user_id = 1;
  string role = 2;
}

message UpdateRoleResponse {
  string message = 1;
  bool success = 2;
}

message ManageGroupRequest {
  int32 group_id = 1;
  string action = 2;
  int32 user_id = 3;
  string role = 4;
}

message ManageGroupResponse {
  string message = 1;
  bool success = 2;
}

message ManageDisciplineRequest {
  int32 discipline_id = 1;
  int32 group_id = 2;
  int32 seminarist_id = 3;
  int32 assistant_id = 4;
}

message ManageDisciplineResponse {
  string message = 1;
  bool success = 2;
}

message Group {
  int32 id = 1;
  string name = 2;
  string description = 3;
  repeated string disciplines = 4;
}

message ListGroupsRequest {}

message ListGroupsResponse {
  bool success = 1;
  string message = 2;
  repeated Group groups = 3;
}

message ManageGroupEntityRequest {
  int32 group_id = 1;
  string name = 2;
  string description = 3;
  string action = 4;
}

message ManageGroupEntityResponse {
  string message = 1;
  bool success = 2;
  int32 group_id = 3;
}

message ListAllUsersRequest {}

message User {
  int32 id = 1;
  string fio = 2;
  string email = 3;
  string group = 4;
  string status = 5;
}

message ListAllUsersResponse {
  bool success = 1;
  string message = 2;
  repeated User users = 3;
}

message ListUsersByGroupRequest {
  string group_name = 1;
}

message ListUsersByGroupResponse {
  bool success = 1;
  string message = 2;
  repeated User users = 3;
}

message RemoveUserRequest {
  string email = 1;
}

message RemoveUserResponse {
  string message = 1;
  bool success = 2;
}

message AddUserRequest {
  string fio = 1;
  string email = 2;
  string group = 3;
  string status = 4;
}

message AddUserResponse {
  string message = 1;
  bool success = 2;
  int32 user_id = 3;
}

message Discipline {
  int32 id = 1;
  string name = 2;
}

message ListDisciplinesRequest {}

message ListDisciplinesResponse {
  bool success = 1;
  string message = 2;
  repeated Discipline disciplines = 3;
}

message ManageDisciplineEntityRequest {
  string action = 1;
  int32 group_id = 2;
  repeated int32 discipline_ids = 3;
  string name = 4;
  int32 seminarist_id = 5;
  int32 assistant_id = 6;
  int32 lector_id = 7;
}

message ManageDisciplineEntityResponse {
  string message = 1;
  bool success = 2;
  int32 discipline_id = 3;
}

message DeleteDisciplineRequest {
  repeated int32 discipline_ids = 1;
}

message DeleteDisciplineResponse {
  string message = 1;
  bool success = 2;
}

message GetGroupStaffRequest {
  int32 group_id = 1;
}

message GetGroupStaffResponse {
  bool success = 1;
  string message = 2;
  int32 seminarist_id = 3;
  int32 assistant_id = 4;
}

message DetachDisciplinesFromGroupRequest {
  int32 group_id = 1;
  repeated int32 discipline_ids = 2;
}

message DetachDisciplinesFromGroupResponse {
  string message = 1;
  bool success = 2;
}