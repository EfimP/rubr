version: '3.8'

services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rubrlocal
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./internal/db/postgres/migrations/schema.sql:/docker-entrypoint-initdb.d/schema.sql  # Относительный путь
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "rubrlocal"]
      interval: 10s
      timeout: 5s
      retries: 5

  userservice:
    build:
      context: .
      dockerfile: ./cmd/userservice/Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

  superaccservice:
    build:
      context: .
      dockerfile: ./cmd/superaccservice/Dockerfile
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

  workservice:
    build:
      context: .
      dockerfile: ./cmd/workservice/Dockerfile
    ports:
      - "50053:50053"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

  rubricservice:
    build:
      context: .
      dockerfile: ./cmd/rubricservice/Dockerfile
    ports:
      - "50055:50055"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

  workassignmentservice:
    build:
      context: .
      dockerfile: ./cmd/workassignmentservice/Dockerfile
    ports:
      - "50054:50054"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

  notificationservice:
    build:
      context: .
      dockerfile: ./cmd/notificationservice/Dockerfile
    ports:
      - "50056:50056"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal


  gradingservice:
    build:
      context: .
      dockerfile: ./cmd/gradingservice/Dockerfile
    ports:
      - "50057:50057"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rubrlocal

networks:
  rubric-net:
    driver: bridge

volumes:
  postgres-data: